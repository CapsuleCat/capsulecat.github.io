{"version":3,"sources":["webpack:///./src/components/Post/Post.js","webpack:///./src/components/PostFooter/PostFooter.js","webpack:///./src/templates/blog-post.js"],"names":["Post","props","post","frontmatter","image","backgroundColor","header","Hero","Container","as","className","Row","Col","style","marginTop","rhythm","marginBottom","title","id","description","date","body","PostFooter","previous","next","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","BlogPostTemplate","data","pageContext","location","mdx","siteTitle","site","siteMetadata","excerpt","Layout","SEO"],"mappings":"wOAqEeA,EA1DF,SAACC,GACb,IAAQC,EAASD,EAATC,KACR,EAAmCA,EAAKC,YAAhCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,gBAEXC,EAASF,GACZ,kBAACG,EAAA,EAAD,CACCH,MAAOA,EACPC,gBAAiBA,IAGnB,OACC,iCACEC,EACD,kBAACE,EAAA,EAAD,CAAWC,GAAG,SAASC,UAAU,aAChC,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,wBACCC,MAAO,CACNC,UAAWC,YAAO,GAClBC,aAAc,IAGdd,EAAKC,YAAYc,OAEnB,+BACC,kBAAC,IAAD,CACCC,GAAG,yBACHC,YAAY,WAHd,IAKE,IACAjB,EAAKC,YAAYiB,SAKtB,kBAACZ,EAAA,EAAD,CAAWC,GAAG,WACb,kBAACE,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,kBAAC,cAAD,KAAcV,EAAKmB,W,YCSVC,EAnDI,SAACrB,GACnB,IAAQsB,EAAmBtB,EAAnBsB,SAAUC,EAASvB,EAATuB,KAElB,OACC,kBAAChB,EAAA,EAAD,CAAWC,GAAG,MAAMC,UAAU,QAC7B,6BACA,kBAACC,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,KACC,wBACCC,MAAO,CACNY,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGV,4BACEN,GACA,kBAAC,OAAD,CAAMO,GAAIP,EAASQ,OAAOC,KAAMC,IAAI,QAApC,KACIV,EAASpB,YAAYc,QAI3B,4BACEO,GACA,kBAAC,OAAD,CAAMM,GAAIN,EAAKO,OAAOC,KAAMC,IAAI,QAC9BT,EAAKrB,YAAYc,MADnB,YCyBOiB,UAjDU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACxCnC,EAAOiC,EAAKG,IACZC,EAAYJ,EAAKK,KAAKC,aAAaxB,MACjCd,EAAyBD,EAAzBC,YAAauC,EAAYxC,EAAZwC,QACbzB,EAAuBd,EAAvBc,MAAOE,EAAgBhB,EAAhBgB,YACPI,EAAmBa,EAAnBb,SAAUC,EAASY,EAATZ,KAElB,OACC,kBAACmB,EAAA,EAAD,CAAQN,SAAUA,EAAUpB,MAAOsB,GAClC,kBAACK,EAAA,EAAD,CACC3B,MAAOA,EACPE,YAAaA,GAAeuB,IAG7B,kBAAC,EAAD,CACCxC,KAAMA,IAGP,kBAAC,EAAD,CACCqB,SAAUA,EACVC,KAAMA","file":"component---src-templates-blog-post-js-4a379856494a9df01e69.js","sourcesContent":["import React from 'react';\nimport { any, shape, string } from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { rhythm } from '../../utils/typography';\nimport Hero from '../../design-system/Hero';\n\nconst Post = (props) => {\n\tconst { post } = props;\n\tconst { image, backgroundColor } = post.frontmatter;\n\n\tlet header = image && (\n\t\t<Hero\n\t\t\timage={image}\n\t\t\tbackgroundColor={backgroundColor}\n\t\t/>\n\t);\n\treturn (\n\t\t<article>\n\t\t\t{header}\n\t\t\t<Container as=\"header\" className=\"mt-3 mb-5\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tmarginTop: rhythm(1),\n\t\t\t\t\t\t\t\tmarginBottom: 0,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<small>\n\t\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\t\tid=\"site.page.posts.posted\"\n\t\t\t\t\t\t\t\tdescription=\"Posted\"\n\t\t\t\t\t\t\t/>:\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{post.frontmatter.date}\n\t\t\t\t\t\t</small>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t\t<Container as=\"section\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<MDXRenderer>{post.body}</MDXRenderer>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</article>\n\t);\n};\n\nPost.propTypes = {\n\tpost: shape({\n\t\timage: any,\n\t\tbackgroundColor: string,\n\t\tfrontmatter: shape({\n\t\t\tdate: string,\n\t\t\ttitle: string,\n\t\t}),\n\t\tbody: string,\n\t}),\n};\n\nexport default Post;","import React from 'react';\nimport { shape, string } from 'prop-types';\nimport { Link } from 'gatsby';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst PostFooter = (props) => {\n\tconst { previous, next } = props;\n\n\treturn (\n\t\t<Container as=\"nav\" className=\"my-3\">\n\t\t\t<hr />\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<ul\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\t\tflexWrap: 'wrap',\n\t\t\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t\t\t\tlistStyle: 'none',\n\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t{previous && (\n\t\t\t\t\t\t\t\t<Link to={previous.fields.slug} rel=\"prev\">\n\t\t\t\t\t\t\t\t\t← {previous.frontmatter.title}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t{next && (\n\t\t\t\t\t\t\t\t<Link to={next.fields.slug} rel=\"next\">\n\t\t\t\t\t\t\t\t\t{next.frontmatter.title} →\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nPostFooter.propTypes = {\n\tnext: shape({\n\t\tfrontmatter: shape({\n\t\t\ttitle: string,\n\t\t}),\n\t}),\n\tprevious: shape({\n\t\tfrontmatter: shape({\n\t\t\ttitle: string,\n\t\t}),\n\t}),\n};\n\nexport default PostFooter;","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { bool, shape, string } from 'prop-types';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Post from '../components/Post';\nimport PostFooter from '../components/PostFooter';\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n\tconst post = data.mdx;\n\tconst siteTitle = data.site.siteMetadata.title;\n\tconst { frontmatter, excerpt } = post;\n\tconst { title, description } = frontmatter;\n\tconst { previous, next } = pageContext;\n\n\treturn (\n\t\t<Layout location={location} title={siteTitle}>\n\t\t\t<SEO\n\t\t\t\ttitle={title}\n\t\t\t\tdescription={description || excerpt}\n\t\t\t/>\n\n\t\t\t<Post\n\t\t\t\tpost={post}\n\t\t\t/>\n\n\t\t\t<PostFooter\n\t\t\t\tprevious={previous}\n\t\t\t\tnext={next}\n\t\t\t/>\n\t\t</Layout>\n\t);\n};\n\nBlogPostTemplate.propTypes = {\n\tdata: shape({\n\t\tmdx: shape({\n\t\t\texcerpt: string,\n\t\t\tfrontmatter: shape({\n\t\t\t\ttitle: string,\n\t\t\t\tdescription: string,\n\t\t\t\tnoTitle: bool,\n\t\t\t}),\n\t\t}),\n\t\tsite: shape({\n\t\t\tsiteMetadata: shape({\n\t\t\t\ttitle: string,\n\t\t\t}),\n\t\t}),\n\t}),\n\tlocation: shape({}),\n\tpageContext: shape({\n\t\tnext: bool,\n\t\tprevious: bool,\n\t}),\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      body\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n\t\tnoTitle\n\t\timage {\n\t\t\tpublicURL\n\t\t\tchildImageSharp {\n\t\t\t\tfluid(maxWidth: 1025) {\n\t\t\t\t\tbase64\n\t\t\t\t\taspectRatio\n\t\t\t\t\tsrc\n\t\t\t\t\tsrcSet\n\t\t\t\t\tsizes\n\t\t\t\t}\n\t\t\t\tfixed(width: 1025){\n\t\t\t\t\tsrc\n\t\t\t\t\twidth\n\t\t\t\t\theight\n\t\t\t\t}\n\t\t\t}\n\t\t}\n      }\n\t  fields {\n\t\tslug\n\t  }\n    }\n  }\n`;\n"],"sourceRoot":""}