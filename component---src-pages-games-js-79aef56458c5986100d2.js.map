{"version":3,"sources":["webpack:///./src/components/GamesHero/GamesHero.js","webpack:///./src/pages/games.js","webpack:///./src/components/GamesHero/GamesHero.module.scss","webpack:///./src/components/Featured/Featured.js"],"names":["JumbotronWrapper","React","forwardRef","props","ref","Jumbotron","GamesHero","className","frontmatter","gameHero","node","image","backgroundColor","Tag","cz","styles","fullHeight","fluid","childImageSharp","Container","BlogIndex","data","location","edges","games","commonProps","Layout","SEO","title","Featured","titleId","featured","module","exports","Row","Box","id","description","Col","maxColumns","map","game","i","slug","fields","Grid","key","CalloutCard","to","Card","Body","Title","Text"],"mappings":"qQASMA,EAAmBC,IAAMC,YAAW,SAACC,EAAOC,GAAR,OAAgB,kBAACC,EAAA,EAAD,eAAWD,IAAKA,GAASD,OAmCpEG,EAjCG,SAACH,GAClB,IAAQI,EAAwBJ,EAAxBI,UACAC,EADwBL,EAAbM,SACcC,KAAzBF,YACAG,EAA2BH,EAA3BG,MAAOC,EAAoBJ,EAApBI,gBAEf,OACC,kBAAC,IAAD,CACCC,IAAKb,EACLO,UAAWO,IAAGP,EAAWQ,IAAOC,YAChCC,MAAON,EAAMO,gBAAgBD,MAC7BL,gBAAiBA,GAEjB,kBAACO,EAAA,EAAD,CAAWZ,UAAWQ,IAAOC,eC0BjBI,UAvCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACpBb,EAAWY,EAAKZ,SAASc,MAAM,GAC/BC,EAAQH,EAAKG,MAAMD,MAEnBE,EAAc,CACnBH,SAAU,SAGX,OACC,kBAACI,EAAA,EAAD,CAAQJ,SAAUA,GACjB,kBAACK,EAAA,EAAD,CAAKC,MAAM,UAEX,kBAAC,EAAD,iBACKH,EADL,CAEChB,SAAUA,KAGX,kBAACoB,EAAA,EAAD,iBACKJ,EADL,CAECK,QAAQ,wBACRC,SAAUP,Q,qBC7BdQ,EAAOC,QAAU,CAAC,WAAa,wC,kNC0EhBJ,EA9DE,SAAC1B,GACjB,IAAQ4B,EAAsD5B,EAAtD4B,SAAR,EAA8D5B,EAA5C2B,eAAlB,MAA4B,8BAA5B,EAEA,OACC,kBAACX,EAAA,EAAD,CAAWZ,UAAU,QACpB,kBAAC2B,EAAA,EAAD,KACC,kBAACC,EAAA,EAAD,CAAK5B,UAAU,eACd,4BACC,kBAAC,IAAD,CACC6B,GAAIN,EACJO,YAAY,sBAKhB,kBAACH,EAAA,EAAD,KACC,kBAACI,EAAA,EAAD,KACC,kBAAC,IAAD,CAAUC,WAAY,GACpBR,EAASS,KAAI,SAACC,EAAMC,GACpB,IAAQC,EAASF,EAAK/B,KAAKkC,OAAnBD,KACR,EAAsCF,EAAK/B,KAAKF,YAAxCoB,EAAR,EAAQA,MAAOS,EAAf,EAAeA,YAAa1B,EAA5B,EAA4BA,MAC5B,OACC,kBAACkC,EAAA,EAAD,CAAUC,IAAKJ,GACd,kBAACK,EAAA,EAAD,CAAaC,GAAIL,GAChB,kBAAC,IAAD,CAAK1B,MAAON,EAAMO,gBAAgBD,QAClC,kBAACgC,EAAA,EAAKC,KAAN,KACC,kBAACD,EAAA,EAAKE,MAAN,KAAavB,GACb,kBAACqB,EAAA,EAAKG,KAAN,KACEf","file":"component---src-pages-games-js-79aef56458c5986100d2.js","sourcesContent":["import React from 'react';\nimport { any, shape, string } from 'prop-types';\nimport cz from 'classnames';\nimport BackgroundImage from 'gatsby-background-image';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Container from 'react-bootstrap/Container';\n\nimport styles from './GamesHero.module.scss';\n\nconst JumbotronWrapper = React.forwardRef((props, ref) => <Jumbotron ref={ref} {...props} />);\n\nconst GamesHero = (props) => {\n\tconst { className, gameHero } = props;\n\tconst { frontmatter } = gameHero.node;\n\tconst { image, backgroundColor } = frontmatter;\n\n\treturn (\n\t\t<BackgroundImage\n\t\t\tTag={JumbotronWrapper}\n\t\t\tclassName={cz(className, styles.fullHeight)}\n\t\t\tfluid={image.childImageSharp.fluid}\n\t\t\tbackgroundColor={backgroundColor}\n\t\t>\n\t\t\t<Container className={styles.fullHeight} />\n\t\t</BackgroundImage>\n\t);\n};\n\nGamesHero.propTypes = {\n\tclassName: string,\n\tgameHero: shape({\n\t\tnode: shape({\n\t\t\tfrontmatter: shape({\n\t\t\t\tbackgroundColor: string,\n\t\t\t\timage: shape({\n\t\t\t\t\tchildImageSharp: shape({\n\t\t\t\t\t\tfluid: any,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t}),\n\t\t}),\n\t}),\n};\n\nexport default GamesHero;","import React from 'react';\nimport { array, shape } from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport '../design-system/setup';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport Featured from '../components/Featured';\nimport GamesHero from '../components/GamesHero';\n\nconst BlogIndex = ({ data, location }) => {\n\tconst gameHero = data.gameHero.edges[0];\n\tconst games = data.games.edges;\n\n\tconst commonProps = {\n\t\tlocation: 'games',\n\t};\n\n\treturn (\n\t\t<Layout location={location}>\n\t\t\t<SEO title=\"Games\" />\n\n\t\t\t<GamesHero\n\t\t\t\t{...commonProps}\n\t\t\t\tgameHero={gameHero}\n\t\t\t/>\n\n\t\t\t<Featured\n\t\t\t\t{...commonProps}\n\t\t\t\ttitleId=\"site.page.games.title\"\n\t\t\t\tfeatured={games}\n\t\t\t/>\n\n\t\t</Layout>\n\t);\n};\n\nBlogIndex.propTypes = {\n\tdata: shape({\n\t\tgameHero: shape({\n\t\t\tedges: array,\n\t\t}),\n\t\tgames: shape({\n\t\t\tedges: array,\n\t\t}),\n\t}),\n\tlocation: shape({}),  \n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n\n    gameHero: allMdx(\n      filter: { fields: { sourceName: { eq: \"gameHero\" } } },\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          body\n          frontmatter {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            backgroundColor\n          }\n        }\n      }\n    }\n\n    games: allMdx(\n      filter: { fields: { sourceName: { eq: \"games\" } } },\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          body\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            image {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            backgroundColor\n          }\n        }\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fullHeight\":\"GamesHero-module--fullHeight--YMjWx\"};","import React from 'react';\nimport { string, any, shape } from 'prop-types';\nimport Img from 'gatsby-image';\nimport { FormattedMessage } from 'react-intl';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nimport CalloutCard from '../../design-system/CalloutCard';\nimport Box from '../../design-system/Box';\nimport { FlexGrid, GridItem } from '../../design-system/Grid';\n\nconst Featured = (props) => {\n\tconst { featured, titleId = 'site.section.featured.title' } = props;\n\n\treturn (\n\t\t<Container className=\"my-5\">\n\t\t\t<Row>\n\t\t\t\t<Box className=\"text-center\">\n\t\t\t\t\t<h2>\n\t\t\t\t\t\t<FormattedMessage\n\t\t\t\t\t\t\tid={titleId}\n\t\t\t\t\t\t\tdescription=\"Featured title\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</h2>\n\t\t\t\t</Box>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<FlexGrid maxColumns={3}>\n\t\t\t\t\t\t{featured.map((game, i) => {\n\t\t\t\t\t\t\tconst { slug } = game.node.fields;\n\t\t\t\t\t\t\tconst { title, description, image } = game.node.frontmatter;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<GridItem key={i}>\n\t\t\t\t\t\t\t\t\t<CalloutCard to={slug}>\n\t\t\t\t\t\t\t\t\t\t<Img fluid={image.childImageSharp.fluid} />\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{title}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t{description}\n\t\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</CalloutCard>\n\t\t\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</FlexGrid>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n};\n\nFeatured.propTypes = {\n\tfeatured: shape({\n\t\tnode: shape({\n\t\t\tfields: shape({\n\t\t\t\tslug: string,\n\t\t\t}),\n\t\t\tfrontmatter: shape({\n\t\t\t\ttitle: string,\n\t\t\t\tdescription: string,\n\t\t\t\timage: shape({\n\t\t\t\t\tchildImageSharp: shape({\n\t\t\t\t\t\tfluid: any,\n\t\t\t\t\t}),\n\t\t\t\t}),\n\t\t\t}),\n\t\t}),\n\t}),\n\ttitleId: string,\n};\n\nexport default Featured;"],"sourceRoot":""}